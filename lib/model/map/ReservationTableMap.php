<?php


/**
 * This class defines the structure of the 'Reservation' table.
 *
 *
 * This class was autogenerated by Propel 1.4.2 on:
 *
 * Thu Sep 30 06:33:12 2010
 *
 *
 * This map class is used by Propel to do runtime db structure discovery.
 * For example, the createSelectSql() method checks the type of a given column used in an
 * ORDER BY clause to know whether it needs to apply SQL to make the ORDER BY case-insensitive
 * (i.e. if it's a text column type).
 *
 * @package    lib.model.map
 */
class ReservationTableMap extends TableMap {

	/**
	 * The (dot-path) name of this class
	 */
	const CLASS_NAME = 'lib.model.map.ReservationTableMap';

	/**
	 * Initialize the table attributes, columns and validators
	 * Relations are not initialized by this method since they are lazy loaded
	 *
	 * @return     void
	 * @throws     PropelException
	 */
	public function initialize()
	{
	  // attributes
		$this->setName('Reservation');
		$this->setPhpName('Reservation');
		$this->setClassname('Reservation');
		$this->setPackage('lib.model');
		$this->setUseIdGenerator(true);
		// columns
		$this->addPrimaryKey('ID', 'Id', 'INTEGER', true, null, null);
		$this->addForeignKey('ROOMPROFILE_ID', 'RoomprofileId', 'INTEGER', 'RoomProfile', 'ID', true, null, null);
		$this->addForeignKey('ACTIVITY_ID', 'ActivityId', 'INTEGER', 'Activity', 'ID', true, null, null);
		$this->addColumn('DATE', 'Date', 'TIMESTAMP', true, null, null);
		$this->addColumn('DURATION', 'Duration', 'INTEGER', true, null, 60);
		$this->addColumn('IS_ACTIVATED', 'IsActivated', 'BOOLEAN', true, null, true);
		$this->addForeignKey('RESERVATIONREASON_ID', 'ReservationreasonId', 'INTEGER', 'ReservationReason', 'ID', false, null, null);
		$this->addColumn('COMMENT', 'Comment', 'VARCHAR', false, 256, null);
		$this->addForeignKey('USERGROUP_ID', 'UsergroupId', 'INTEGER', 'UserGroup', 'ID', false, null, null);
		$this->addForeignKey('CARD_ID', 'CardId', 'INTEGER', 'Card', 'ID', false, null, null);
		$this->addForeignKey('USER_ID', 'UserId', 'INTEGER', 'User', 'ID', false, null, null);
		$this->addColumn('MEMBERS_COUNT', 'MembersCount', 'INTEGER', true, null, 0);
		$this->addColumn('GUESTS_COUNT', 'GuestsCount', 'INTEGER', true, null, 0);
		$this->addColumn('CREATED_AT', 'CreatedAt', 'TIMESTAMP', false, null, null);
		$this->addColumn('UPDATED_AT', 'UpdatedAt', 'TIMESTAMP', false, null, null);
		$this->addColumn('STATUS', 'Status', 'INTEGER', true, null, 0);
		$this->addColumn('PRICE', 'Price', 'INTEGER', false, null, 0);
		$this->addColumn('CUSTOM_1', 'Custom1', 'VARCHAR', false, 256, null);
		$this->addColumn('CUSTOM_2', 'Custom2', 'VARCHAR', false, 256, null);
		$this->addColumn('CUSTOM_3', 'Custom3', 'VARCHAR', false, 256, null);
		// validators
	} // initialize()

	/**
	 * Build the RelationMap objects for this table relationships
	 */
	public function buildRelations()
	{
    $this->addRelation('Roomprofile', 'Roomprofile', RelationMap::MANY_TO_ONE, array('RoomProfile_id' => 'id', ), 'CASCADE', null);
    $this->addRelation('Activity', 'Activity', RelationMap::MANY_TO_ONE, array('Activity_id' => 'id', ), 'CASCADE', null);
    $this->addRelation('Reservationreason', 'Reservationreason', RelationMap::MANY_TO_ONE, array('ReservationReason_id' => 'id', ), null, null);
    $this->addRelation('Usergroup', 'Usergroup', RelationMap::MANY_TO_ONE, array('UserGroup_id' => 'id', ), 'CASCADE', null);
    $this->addRelation('Card', 'Card', RelationMap::MANY_TO_ONE, array('Card_id' => 'id', ), 'CASCADE', null);
    $this->addRelation('User', 'User', RelationMap::MANY_TO_ONE, array('User_id' => 'id', ), 'CASCADE', null);
	} // buildRelations()

} // ReservationTableMap
