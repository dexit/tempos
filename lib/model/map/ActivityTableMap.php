<?php


/**
 * This class defines the structure of the 'Activity' table.
 *
 *
 * This class was autogenerated by Propel 1.4.2 on:
 *
 * Thu Sep 30 06:33:12 2010
 *
 *
 * This map class is used by Propel to do runtime db structure discovery.
 * For example, the createSelectSql() method checks the type of a given column used in an
 * ORDER BY clause to know whether it needs to apply SQL to make the ORDER BY case-insensitive
 * (i.e. if it's a text column type).
 *
 * @package    lib.model.map
 */
class ActivityTableMap extends TableMap {

	/**
	 * The (dot-path) name of this class
	 */
	const CLASS_NAME = 'lib.model.map.ActivityTableMap';

	/**
	 * Initialize the table attributes, columns and validators
	 * Relations are not initialized by this method since they are lazy loaded
	 *
	 * @return     void
	 * @throws     PropelException
	 */
	public function initialize()
	{
	  // attributes
		$this->setName('Activity');
		$this->setPhpName('Activity');
		$this->setClassname('Activity');
		$this->setPackage('lib.model');
		$this->setUseIdGenerator(true);
		// columns
		$this->addPrimaryKey('ID', 'Id', 'INTEGER', true, null, null);
		$this->addColumn('NAME', 'Name', 'VARCHAR', true, 64, null);
		$this->addColumn('COLOR', 'Color', 'VARCHAR', true, 16, '#ffffff');
		$this->addColumn('MINIMUM_OCCUPATION', 'MinimumOccupation', 'INTEGER', true, null, 1);
		$this->addColumn('MAXIMUM_OCCUPATION', 'MaximumOccupation', 'INTEGER', true, null, 2);
		$this->addColumn('MINIMUM_DELAY', 'MinimumDelay', 'INTEGER', true, null, 60);
		// validators
	} // initialize()

	/**
	 * Build the RelationMap objects for this table relationships
	 */
	public function buildRelations()
	{
    $this->addRelation('RoomHasActivity', 'RoomHasActivity', RelationMap::ONE_TO_MANY, array('id' => 'Activity_id', ), 'CASCADE', null);
    $this->addRelation('Subscription', 'Subscription', RelationMap::ONE_TO_MANY, array('id' => 'Activity_id', ), 'CASCADE', null);
    $this->addRelation('Reservation', 'Reservation', RelationMap::ONE_TO_MANY, array('id' => 'Activity_id', ), 'CASCADE', null);
    $this->addRelation('Reservationreason', 'Reservationreason', RelationMap::ONE_TO_MANY, array('id' => 'Activity_id', ), 'CASCADE', null);
    $this->addRelation('ActivityHasFeature', 'ActivityHasFeature', RelationMap::ONE_TO_MANY, array('id' => 'Activity_id', ), 'CASCADE', null);
    $this->addRelation('UsergroupHasActivity', 'UsergroupHasActivity', RelationMap::ONE_TO_MANY, array('id' => 'Activity_id', ), 'CASCADE', null);
	} // buildRelations()

} // ActivityTableMap
