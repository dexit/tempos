<?php


/**
 * This class defines the structure of the 'Subscription' table.
 *
 *
 * This class was autogenerated by Propel 1.4.2 on:
 *
 * Thu Sep 30 06:33:12 2010
 *
 *
 * This map class is used by Propel to do runtime db structure discovery.
 * For example, the createSelectSql() method checks the type of a given column used in an
 * ORDER BY clause to know whether it needs to apply SQL to make the ORDER BY case-insensitive
 * (i.e. if it's a text column type).
 *
 * @package    lib.model.map
 */
class SubscriptionTableMap extends TableMap {

	/**
	 * The (dot-path) name of this class
	 */
	const CLASS_NAME = 'lib.model.map.SubscriptionTableMap';

	/**
	 * Initialize the table attributes, columns and validators
	 * Relations are not initialized by this method since they are lazy loaded
	 *
	 * @return     void
	 * @throws     PropelException
	 */
	public function initialize()
	{
	  // attributes
		$this->setName('Subscription');
		$this->setPhpName('Subscription');
		$this->setClassname('Subscription');
		$this->setPackage('lib.model');
		$this->setUseIdGenerator(true);
		// columns
		$this->addPrimaryKey('ID', 'Id', 'INTEGER', true, null, null);
		$this->addForeignKey('ACTIVITY_ID', 'ActivityId', 'INTEGER', 'Activity', 'ID', true, null, null);
		$this->addForeignKey('ZONE_ID', 'ZoneId', 'INTEGER', 'Zone', 'ID', true, null, null);
		$this->addColumn('START', 'Start', 'DATE', false, null, null);
		$this->addColumn('STOP', 'Stop', 'DATE', false, null, null);
		$this->addColumn('CREDIT', 'Credit', 'INTEGER', false, null, null);
		$this->addColumn('IS_ACTIVE', 'IsActive', 'BOOLEAN', true, null, true);
		$this->addForeignKey('CARD_ID', 'CardId', 'INTEGER', 'Card', 'ID', false, null, null);
		$this->addForeignKey('USER_ID', 'UserId', 'INTEGER', 'User', 'ID', false, null, null);
		$this->addColumn('MINIMUM_DELAY', 'MinimumDelay', 'INTEGER', true, null, 12);
		$this->addColumn('MAXIMUM_DELAY', 'MaximumDelay', 'INTEGER', true, null, 7);
		$this->addColumn('MAXIMUM_DURATION', 'MaximumDuration', 'INTEGER', true, null, 120);
		$this->addColumn('HOURS_PER_WEEK', 'HoursPerWeek', 'INTEGER', true, null, 4);
		$this->addForeignKey('USERGROUP_ID', 'UsergroupId', 'INTEGER', 'UserGroup', 'ID', false, null, null);
		$this->addColumn('MINIMUM_DURATION', 'MinimumDuration', 'INTEGER', true, null, 60);
		// validators
	} // initialize()

	/**
	 * Build the RelationMap objects for this table relationships
	 */
	public function buildRelations()
	{
    $this->addRelation('Activity', 'Activity', RelationMap::MANY_TO_ONE, array('Activity_id' => 'id', ), 'CASCADE', null);
    $this->addRelation('Zone', 'Zone', RelationMap::MANY_TO_ONE, array('Zone_id' => 'id', ), 'CASCADE', null);
    $this->addRelation('Card', 'Card', RelationMap::MANY_TO_ONE, array('Card_id' => 'id', ), 'CASCADE', null);
    $this->addRelation('User', 'User', RelationMap::MANY_TO_ONE, array('User_id' => 'id', ), 'CASCADE', null);
    $this->addRelation('Usergroup', 'Usergroup', RelationMap::MANY_TO_ONE, array('UserGroup_id' => 'id', ), 'CASCADE', null);
	} // buildRelations()

} // SubscriptionTableMap
