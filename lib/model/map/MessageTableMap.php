<?php


/**
 * This class defines the structure of the 'Message' table.
 *
 *
 * This class was autogenerated by Propel 1.4.2 on:
 *
 * Thu Sep 30 06:33:12 2010
 *
 *
 * This map class is used by Propel to do runtime db structure discovery.
 * For example, the createSelectSql() method checks the type of a given column used in an
 * ORDER BY clause to know whether it needs to apply SQL to make the ORDER BY case-insensitive
 * (i.e. if it's a text column type).
 *
 * @package    lib.model.map
 */
class MessageTableMap extends TableMap {

	/**
	 * The (dot-path) name of this class
	 */
	const CLASS_NAME = 'lib.model.map.MessageTableMap';

	/**
	 * Initialize the table attributes, columns and validators
	 * Relations are not initialized by this method since they are lazy loaded
	 *
	 * @return     void
	 * @throws     PropelException
	 */
	public function initialize()
	{
	  // attributes
		$this->setName('Message');
		$this->setPhpName('Message');
		$this->setClassname('Message');
		$this->setPackage('lib.model');
		$this->setUseIdGenerator(true);
		// columns
		$this->addPrimaryKey('ID', 'Id', 'INTEGER', true, null, null);
		$this->addColumn('SUBJECT', 'Subject', 'VARCHAR', true, 256, null);
		$this->addColumn('TEXT', 'Text', 'LONGVARCHAR', true, null, null);
		$this->addColumn('CREATED_AT', 'CreatedAt', 'TIMESTAMP', false, null, null);
		$this->addForeignKey('RECIPIENT_ID', 'RecipientId', 'INTEGER', 'User', 'ID', true, null, null);
		$this->addColumn('SENDER', 'Sender', 'VARCHAR', true, 256, null);
		$this->addForeignKey('SENDER_ID', 'SenderId', 'INTEGER', 'User', 'ID', false, null, null);
		$this->addColumn('WAS_READ', 'WasRead', 'BOOLEAN', true, null, false);
		$this->addForeignKey('OWNER_ID', 'OwnerId', 'INTEGER', 'User', 'ID', true, null, null);
		// validators
	} // initialize()

	/**
	 * Build the RelationMap objects for this table relationships
	 */
	public function buildRelations()
	{
    $this->addRelation('UserRelatedByRecipientId', 'User', RelationMap::MANY_TO_ONE, array('recipient_id' => 'id', ), 'CASCADE', null);
    $this->addRelation('UserRelatedBySenderId', 'User', RelationMap::MANY_TO_ONE, array('sender_id' => 'id', ), 'CASCADE', null);
    $this->addRelation('UserRelatedByOwnerId', 'User', RelationMap::MANY_TO_ONE, array('owner_id' => 'id', ), 'CASCADE', null);
	} // buildRelations()

} // MessageTableMap
